{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","cases","token","bracket","next","include","whitespace","comment","string","numbers"],"mappings":"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","file":"rust.0262dbaa.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n            end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\n        }\n    }\n};\nexport var language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as',\n        'box',\n        'break',\n        'const',\n        'continue',\n        'crate',\n        'else',\n        'enum',\n        'extern',\n        'false',\n        'fn',\n        'for',\n        'if',\n        'impl',\n        'in',\n        'let',\n        'loop',\n        'match',\n        'mod',\n        'move',\n        'mut',\n        'pub',\n        'ref',\n        'return',\n        'self',\n        'static',\n        'struct',\n        'super',\n        'trait',\n        'true',\n        'type',\n        'unsafe',\n        'use',\n        'where',\n        'while',\n        'catch',\n        'default',\n        'union',\n        'static',\n        'abstract',\n        'alignof',\n        'become',\n        'do',\n        'final',\n        'macro',\n        'offsetof',\n        'override',\n        'priv',\n        'proc',\n        'pure',\n        'sizeof',\n        'typeof',\n        'unsized',\n        'virtual',\n        'yield'\n    ],\n    typeKeywords: [\n        'Self',\n        'm32',\n        'm64',\n        'm128',\n        'f80',\n        'f16',\n        'f128',\n        'int',\n        'uint',\n        'float',\n        'char',\n        'bool',\n        'u8',\n        'u16',\n        'u32',\n        'u64',\n        'f32',\n        'f64',\n        'i8',\n        'i16',\n        'i32',\n        'i64',\n        'str',\n        'Option',\n        'Either',\n        'c_float',\n        'c_double',\n        'c_void',\n        'FILE',\n        'fpos_t',\n        'DIR',\n        'dirent',\n        'c_char',\n        'c_schar',\n        'c_uchar',\n        'c_short',\n        'c_ushort',\n        'c_int',\n        'c_uint',\n        'c_long',\n        'c_ulong',\n        'size_t',\n        'ptrdiff_t',\n        'clock_t',\n        'time_t',\n        'c_longlong',\n        'c_ulonglong',\n        'intptr_t',\n        'uintptr_t',\n        'off_t',\n        'dev_t',\n        'ino_t',\n        'pid_t',\n        'mode_t',\n        'ssize_t'\n    ],\n    constants: ['true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err'],\n    supportConstants: [\n        'EXIT_FAILURE',\n        'EXIT_SUCCESS',\n        'RAND_MAX',\n        'EOF',\n        'SEEK_SET',\n        'SEEK_CUR',\n        'SEEK_END',\n        '_IOFBF',\n        '_IONBF',\n        '_IOLBF',\n        'BUFSIZ',\n        'FOPEN_MAX',\n        'FILENAME_MAX',\n        'L_tmpnam',\n        'TMP_MAX',\n        'O_RDONLY',\n        'O_WRONLY',\n        'O_RDWR',\n        'O_APPEND',\n        'O_CREAT',\n        'O_EXCL',\n        'O_TRUNC',\n        'S_IFIFO',\n        'S_IFCHR',\n        'S_IFBLK',\n        'S_IFDIR',\n        'S_IFREG',\n        'S_IFMT',\n        'S_IEXEC',\n        'S_IWRITE',\n        'S_IREAD',\n        'S_IRWXU',\n        'S_IXUSR',\n        'S_IWUSR',\n        'S_IRUSR',\n        'F_OK',\n        'R_OK',\n        'W_OK',\n        'X_OK',\n        'STDIN_FILENO',\n        'STDOUT_FILENO',\n        'STDERR_FILENO'\n    ],\n    supportMacros: [\n        'format!',\n        'print!',\n        'println!',\n        'panic!',\n        'format_args!',\n        'unreachable!',\n        'write!',\n        'writeln!'\n    ],\n    operators: [\n        '!',\n        '!=',\n        '%',\n        '%=',\n        '&',\n        '&=',\n        '&&',\n        '*',\n        '*=',\n        '+',\n        '+=',\n        '-',\n        '-=',\n        '->',\n        '.',\n        '..',\n        '...',\n        '/',\n        '/=',\n        ':',\n        ';',\n        '<<',\n        '<<=',\n        '<',\n        '<=',\n        '=',\n        '==',\n        '=>',\n        '>',\n        '>=',\n        '>>',\n        '>>=',\n        '@',\n        '^',\n        '^=',\n        '|',\n        '|=',\n        '||',\n        '_',\n        '?',\n        '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [\n                /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [\n                /@delimiters/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }\n            ],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }]\n        ]\n    }\n};\n"]}