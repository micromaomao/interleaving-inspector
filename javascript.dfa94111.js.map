{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js"],"names":["conf","tsConf","language","defaultToken","tokenPostfix","keywords","typeKeywords","operators","tsLanguage","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer"],"mappings":";;;;;;;AAIA;;AAJA;AACA;AACA;AACA;AAEO,IAAIA,IAAI,GAAGC,gBAAX;;AACA,IAAIC,QAAQ,GAAG;AAClB;AACAC,EAAAA,YAAY,EAAE,SAFI;AAGlBC,EAAAA,YAAY,EAAE,KAHI;AAIlBC,EAAAA,QAAQ,EAAE,CACN,OADM,EAEN,MAFM,EAGN,OAHM,EAIN,OAJM,EAKN,UALM,EAMN,OANM,EAON,aAPM,EAQN,UARM,EASN,SATM,EAUN,QAVM,EAWN,IAXM,EAYN,MAZM,EAaN,QAbM,EAcN,SAdM,EAeN,OAfM,EAgBN,SAhBM,EAiBN,KAjBM,EAkBN,MAlBM,EAmBN,UAnBM,EAoBN,KApBM,EAqBN,IArBM,EAsBN,QAtBM,EAuBN,IAvBM,EAwBN,YAxBM,EAyBN,KAzBM,EA0BN,KA1BM,EA2BN,MA3BM,EA4BN,QA5BM,EA6BN,KA7BM,EA8BN,OA9BM,EA+BN,QA/BM,EAgCN,QAhCM,EAiCN,MAjCM,EAkCN,OAlCM,EAmCN,MAnCM,EAoCN,KApCM,EAqCN,QArCM,EAsCN,WAtCM,EAuCN,KAvCM,EAwCN,MAxCM,EAyCN,OAzCM,EA0CN,MA1CM,EA2CN,OA3CM,EA4CN,OA5CM,EA6CN,OA7CM,EA8CN,IA9CM,CAJQ;AAoDlBC,EAAAA,YAAY,EAAE,EApDI;AAqDlBC,EAAAA,SAAS,EAAEC,qBAAWD,SArDJ;AAsDlBE,EAAAA,OAAO,EAAED,qBAAWC,OAtDF;AAuDlBC,EAAAA,OAAO,EAAEF,qBAAWE,OAvDF;AAwDlBC,EAAAA,MAAM,EAAEH,qBAAWG,MAxDD;AAyDlBC,EAAAA,WAAW,EAAEJ,qBAAWI,WAzDN;AA0DlBC,EAAAA,YAAY,EAAEL,qBAAWK,YA1DP;AA2DlBC,EAAAA,SAAS,EAAEN,qBAAWM,SA3DJ;AA4DlBC,EAAAA,SAAS,EAAEP,qBAAWO,SA5DJ;AA6DlBC,EAAAA,SAAS,EAAER,qBAAWQ,SA7DJ;AA8DlBC,EAAAA,SAAS,EAAET,qBAAWS;AA9DJ,CAAf","file":"javascript.dfa94111.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\nexport var conf = tsConf;\nexport var language = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    tokenPostfix: '.js',\n    keywords: [\n        'break',\n        'case',\n        'catch',\n        'class',\n        'continue',\n        'const',\n        'constructor',\n        'debugger',\n        'default',\n        'delete',\n        'do',\n        'else',\n        'export',\n        'extends',\n        'false',\n        'finally',\n        'for',\n        'from',\n        'function',\n        'get',\n        'if',\n        'import',\n        'in',\n        'instanceof',\n        'let',\n        'new',\n        'null',\n        'return',\n        'set',\n        'super',\n        'switch',\n        'symbol',\n        'this',\n        'throw',\n        'true',\n        'try',\n        'typeof',\n        'undefined',\n        'var',\n        'void',\n        'while',\n        'with',\n        'yield',\n        'async',\n        'await',\n        'of'\n    ],\n    typeKeywords: [],\n    operators: tsLanguage.operators,\n    symbols: tsLanguage.symbols,\n    escapes: tsLanguage.escapes,\n    digits: tsLanguage.digits,\n    octaldigits: tsLanguage.octaldigits,\n    binarydigits: tsLanguage.binarydigits,\n    hexdigits: tsLanguage.hexdigits,\n    regexpctl: tsLanguage.regexpctl,\n    regexpesc: tsLanguage.regexpesc,\n    tokenizer: tsLanguage.tokenizer\n};\n"]}