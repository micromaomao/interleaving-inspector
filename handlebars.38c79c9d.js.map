{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js"],"names":["EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","commentBlock","commentHtml","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","handlebarsInSimpleState","include","handlebarsInEmbeddedState","handlebarsRoot"],"mappings":";;;;;;;AAIA;;AAJA;AACA;AACA;AACA;AAEA,IAAIA,cAAc,GAAG,CACjB,MADiB,EAEjB,MAFiB,EAGjB,IAHiB,EAIjB,KAJiB,EAKjB,OALiB,EAMjB,IANiB,EAOjB,KAPiB,EAQjB,OARiB,EASjB,QATiB,EAUjB,MAViB,EAWjB,UAXiB,EAYjB,MAZiB,EAajB,OAbiB,EAcjB,QAdiB,EAejB,OAfiB,EAgBjB,KAhBiB,CAArB;AAkBO,IAAIC,IAAI,GAAG;AACdC,EAAAA,WAAW,EAAE,gFADC;AAEdC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAAC,OAAD,EAAU,MAAV;AADR,GAFI;AAKdC,EAAAA,QAAQ,EAAE,CACN,CAAC,MAAD,EAAS,KAAT,CADM,EAEN,CAAC,GAAD,EAAM,GAAN,CAFM,EAGN,CAAC,IAAD,EAAO,IAAP,CAHM,EAIN,CAAC,GAAD,EAAM,GAAN,CAJM,EAKN,CAAC,GAAD,EAAM,GAAN,CALM,CALI;AAYdC,EAAAA,gBAAgB,EAAE,CACd;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADc,EAEd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHc,EAId;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAJc,EAKd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GALc,CAZJ;AAmBdC,EAAAA,gBAAgB,EAAE,CACd;AAAEF,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADc,EAEd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHc,CAnBJ;AAwBdE,EAAAA,YAAY,EAAE,CACV;AACIC,IAAAA,UAAU,EAAE,IAAIC,MAAJ,CAAW,YAAYZ,cAAc,CAACa,IAAf,CAAoB,GAApB,CAAZ,GAAuC,sCAAlD,EAA0F,GAA1F,CADhB;AAEIC,IAAAA,SAAS,EAAE,uBAFf;AAGIC,IAAAA,MAAM,EAAE;AACJC,MAAAA,YAAY,EAAEC,4BAAUC,YAAV,CAAuBC;AADjC;AAHZ,GADU,EAQV;AACIR,IAAAA,UAAU,EAAE,IAAIC,MAAJ,CAAW,YAAYZ,cAAc,CAACa,IAAf,CAAoB,GAApB,CAAZ,GAAuC,sCAAlD,EAA0F,GAA1F,CADhB;AAEIE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,YAAY,EAAEC,4BAAUC,YAAV,CAAuBE;AAAvC;AAFZ,GARU;AAxBA,CAAX;;AAsCA,IAAIC,QAAQ,GAAG;AAClBC,EAAAA,YAAY,EAAE,EADI;AAElBC,EAAAA,YAAY,EAAE,EAFI;AAGlB;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CACF,CAAC,SAAD,EAAY,gCAAZ,EAA8C,eAA9C,CADE,EAEF,CAAC,OAAD,EAAU,0BAAV,EAAsC,UAAtC,CAFE,EAGF,CAAC,MAAD,EAAS;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAT,CAHE,EAIF,CAAC,WAAD,EAAc,cAAd,EAA8B,UAA9B,CAJE,EAKF,CAAC,MAAD,EAAS,cAAT,EAAyB,cAAzB,CALE,EAMF,CAAC,eAAD,EAAkB,CAAC,gBAAD,EAAmB,UAAnB,EAA+B,gBAA/B,CAAlB,CANE,EAOF,CAAC,aAAD,EAAgB,CAAC,gBAAD,EAAmB;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAnB,CAAhB,CAPE,EAQF,CAAC,YAAD,EAAe,CAAC,gBAAD,EAAmB;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAnB,CAAf,CARE,EASF,CAAC,aAAD,EAAgB,CAAC,gBAAD,EAAmB;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAnB,CAAhB,CATE,EAUF,CAAC,YAAD,EAAe,CAAC,gBAAD,EAAmB;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAnB,CAAf,CAVE,EAWF,CAAC,GAAD,EAAM,gBAAN,CAXE,EAYF,CAAC,IAAD,EAAO,gBAAP,CAZE,EAaF,CAAC,QAAD,CAbE,CAaS;AAbT,KADC;AAgBPC,IAAAA,OAAO,EAAE,CACL,CACI,MADJ,EAEI;AACIH,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADK,EAQL,CAAC,OAAD,EAAU,sBAAV,CARK,EASL,CAAC,GAAD,EAAM,cAAN,EAAsB,MAAtB,CATK,CAhBF;AA2BPG,IAAAA,OAAO,EAAE,CACL,CAAC,MAAD,EAAS,wBAAT,EAAmC,MAAnC,CADK,EAEL,CAAC,GAAD,EAAM,4BAAN,CAFK,CA3BF;AA+BPC,IAAAA,YAAY,EAAE,CACV,CAAC,QAAD,EAAW,8BAAX,EAA2C,MAA3C,CADU,EAEV,CAAC,GAAD,EAAM,4BAAN,CAFU,CA/BP;AAmCPC,IAAAA,WAAW,EAAE,CACT,CACI,MADJ,EAEI;AACIN,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADS,EAQT,CAAC,KAAD,EAAQ,cAAR,EAAwB,MAAxB,CARS,EAST,CAAC,OAAD,EAAU,sBAAV,CATS,EAUT,CAAC,GAAD,EAAM,sBAAN,CAVS,CAnCN;AA+CPM,IAAAA,QAAQ,EAAE,CACN,CACI,MADJ,EAEI;AACIP,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADM,EAQN,CAAC,MAAD,EAAS,gBAAT,EAA2B,MAA3B,CARM,EASN,CAAC,WAAD,EAAc,iBAAd,CATM,EAUN,CAAC,WAAD,EAAc,iBAAd,CAVM,EAWN,CAAC,SAAD,EAAY,gBAAZ,CAXM,EAYN,CAAC,GAAD,EAAM,WAAN,CAZM,EAaN,CAAC,YAAD,CAbM,CAaS;AAbT,KA/CH;AA8DP;AACA;AACAO,IAAAA,MAAM,EAAE,CACJ,CACI,MADJ,EAEI;AACIR,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADI,EAQJ,CAAC,MAAD,EAAS,gBAAT,EAA2B,kBAA3B,CARI,EASJ,CAAC,WAAD,EAAc,iBAAd,CATI,EAUJ,CAAC,WAAD,EAAc,iBAAd,CAVI,EAWJ,CAAC,SAAD,EAAY,gBAAZ,CAXI,EAYJ,CAAC,GAAD,EAAM,WAAN,CAZI,EAaJ,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,iCAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CAbI,EAqBJ,CAAC,YAAD,CArBI,EAsBJ,CACI,qBADJ,EAEI,CAAC,gBAAD,EAAmB,UAAnB,EAA+B;AAAET,MAAAA,KAAK,EAAE,gBAAT;AAA2BE,MAAAA,IAAI,EAAE;AAAjC,KAA/B,CAFJ,CAtBI,CAhED;AA2FP;AACAQ,IAAAA,eAAe,EAAE,CACb,CACI,MADJ,EAEI;AACIV,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADa,EAQb,CAAC,GAAD,EAAM,WAAN,EAAmB,wBAAnB,CARa,EASb,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,iCAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CATa,EAiBb,CAAC,YAAD,CAjBa,EAkBb,CAAC,eAAD,EAAkB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAlB,CAlBa,CA5FV;AAgHP;AACAS,IAAAA,qBAAqB,EAAE,CACnB,CACI,MADJ,EAEI;AACIX,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADmB,EAQnB,CACI,WADJ,EAEI;AACID,MAAAA,KAAK,EAAE,iBADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CARmB,EAenB,CACI,WADJ,EAEI;AACID,MAAAA,KAAK,EAAE,iBADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CAfmB,EAsBnB,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,iCAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CAtBmB,EA8BnB,CAAC,YAAD,CA9BmB,EA+BnB,CAAC,eAAD,EAAkB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAlB,CA/BmB,CAjHhB;AAkJP;AACAU,IAAAA,oBAAoB,EAAE,CAClB,CACI,MADJ,EAEI;AACIZ,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADkB,EAQlB,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,qBAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CARkB,EAgBlB,CAAC,WAAD,EAAc,iBAAd,CAhBkB,EAiBlB,CAAC,WAAD,EAAc,iBAAd,CAjBkB,EAkBlB,CAAC,SAAD,EAAY,gBAAZ,CAlBkB,EAmBlB,CAAC,GAAD,EAAM,WAAN,CAnBkB,EAoBlB,CAAC,YAAD,CApBkB,EAqBlB,CAAC,eAAD,EAAkB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAlB,CArBkB,CAnJf;AA0KPW,IAAAA,cAAc,EAAE,CACZ,CACI,MADJ,EAEI;AACIb,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE,+CAFd;AAGIQ,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CADY,EASZ,CAAC,WAAD,EAAc;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE,MAA3B;AAAmCO,MAAAA,YAAY,EAAE;AAAjD,KAAd,CATY,CA1KT;AAqLP;AACA;AACA;AACAK,IAAAA,KAAK,EAAE,CACH,CACI,MADJ,EAEI;AACId,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADG,EAQH,CAAC,MAAD,EAAS,gBAAT,EAA2B,iBAA3B,CARG,EASH,CAAC,WAAD,EAAc,iBAAd,CATG,EAUH,CAAC,WAAD,EAAc,iBAAd,CAVG,EAWH,CAAC,SAAD,EAAY,gBAAZ,CAXG,EAYH,CAAC,GAAD,EAAM,WAAN,CAZG,EAaH,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,yBAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CAbG,EAqBH,CAAC,YAAD,CArBG,EAsBH,CACI,oBADJ,EAEI,CAAC,gBAAD,EAAmB,UAAnB,EAA+B;AAAET,MAAAA,KAAK,EAAE,gBAAT;AAA2BE,MAAAA,IAAI,EAAE;AAAjC,KAA/B,CAFJ,CAtBG,CAxLA;AAmNP;AACAa,IAAAA,cAAc,EAAE,CACZ,CACI,MADJ,EAEI;AACIf,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADY,EAQZ,CAAC,GAAD,EAAM,WAAN,EAAmB,uBAAnB,CARY,EASZ,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,yBAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CATY,EAiBZ,CAAC,YAAD,CAjBY,EAkBZ,CAAC,cAAD,EAAiB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAjB,CAlBY,CApNT;AAwOP;AACAc,IAAAA,oBAAoB,EAAE,CAClB,CACI,MADJ,EAEI;AACIhB,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADkB,EAQlB,CACI,WADJ,EAEI;AACID,MAAAA,KAAK,EAAE,iBADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CARkB,EAelB,CACI,WADJ,EAEI;AACID,MAAAA,KAAK,EAAE,iBADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CAfkB,EAsBlB,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,yBAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CAtBkB,EA8BlB,CAAC,YAAD,CA9BkB,EA+BlB,CAAC,cAAD,EAAiB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAjB,CA/BkB,CAzOf;AA0QP;AACAe,IAAAA,mBAAmB,EAAE,CACjB,CACI,MADJ,EAEI;AACIjB,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAFJ,CADiB,EAQjB,CACI,GADJ,EAEI;AACID,MAAAA,KAAK,EAAE,gBADX;AAEIE,MAAAA,IAAI,EAAE,oBAFV;AAGIO,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CARiB,EAgBjB,CAAC,WAAD,EAAc,iBAAd,CAhBiB,EAiBjB,CAAC,WAAD,EAAc,iBAAd,CAjBiB,EAkBjB,CAAC,SAAD,EAAY,gBAAZ,CAlBiB,EAmBjB,CAAC,GAAD,EAAM,WAAN,CAnBiB,EAoBjB,CAAC,YAAD,CApBiB,EAqBjB,CAAC,cAAD,EAAiB;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE;AAA3B,KAAjB,CArBiB,CA3Qd;AAkSPgB,IAAAA,aAAa,EAAE,CACX,CACI,MADJ,EAEI;AACIlB,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,QAAQ,EAAE,8CAFd;AAGIQ,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CADW,EASX,CAAC,UAAD,EAAa;AAAET,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,IAAI,EAAE,MAA3B;AAAmCO,MAAAA,YAAY,EAAE;AAAjD,KAAb,CATW,CAlSR;AA6SP;AACAU,IAAAA,uBAAuB,EAAE,CACrB,CAAC,SAAD,EAAY,sBAAZ,CADqB,EAErB,CAAC,SAAD,EAAY;AAAEnB,MAAAA,KAAK,EAAE,sBAAT;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAAZ,CAFqB,EAGrB;AAAEmB,MAAAA,OAAO,EAAE;AAAX,KAHqB,CA9SlB;AAmTPC,IAAAA,yBAAyB,EAAE,CACvB,CAAC,SAAD,EAAY,sBAAZ,CADuB,EAEvB,CACI,SADJ,EAEI;AACIrB,MAAAA,KAAK,EAAE,sBADX;AAEIC,MAAAA,QAAQ,EAAE,UAFd;AAGIQ,MAAAA,YAAY,EAAE;AAHlB,KAFJ,CAFuB,EAUvB;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAVuB,CAnTpB;AA+TPE,IAAAA,cAAc,EAAE,CACZ,CAAC,SAAD,EAAY,mBAAZ,CADY,EAEZ,CAAC,aAAD,EAAgB,2BAAhB,CAFY,EAGZ,CAAC,QAAD,EAAW,2BAAX,CAHY,EAIZ,CAAC,OAAD,CAJY,EAKZ,CAAC,MAAD,EAAS,+BAAT,CALY;AA/TT;AALO,CAAf","file":"handlebars.38c79c9d.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { languages } from '../fillers/monaco-editor-core.js';\nvar EMPTY_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'keygen',\n    'link',\n    'menuitem',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['{{!--', '--}}']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{{', '}}'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: {\n                indentAction: languages.IndentAction.IndentOutdent\n            }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: languages.IndentAction.Indent }\n        }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/\\{\\{!--/, 'comment.block.start.handlebars', '@commentBlock'],\n            [/\\{\\{!/, 'comment.start.handlebars', '@comment'],\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@commentHtml'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/\\{/, 'delimiter.html'],\n            [/[^<{]+/] // text\n        ],\n        doctype: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.comment'\n                }\n            ],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop']\n        ],\n        comment: [\n            [/\\}\\}/, 'comment.end.handlebars', '@pop'],\n            [/./, 'comment.content.handlebars']\n        ],\n        commentBlock: [\n            [/--\\}\\}/, 'comment.block.end.handlebars', '@pop'],\n            [/./, 'comment.content.handlebars']\n        ],\n        commentHtml: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.comment'\n                }\n            ],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.otherTag'\n                }\n            ],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/] // whitespace\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.script'\n                }\n            ],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@scriptEmbedded.text/javascript',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [\n                /(<\\/)(script\\s*)(>)/,\n                ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]\n            ]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.scriptAfterType'\n                }\n            ],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@scriptEmbedded.text/javascript',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals'\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@scriptWithCustomType.$1'\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@scriptWithCustomType.$1'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@scriptEmbedded.text/javascript',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@scriptEmbedded.$S2',\n                    nextEmbedded: '$S2'\n                }\n            ],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2',\n                    nextEmbedded: '@pop'\n                }\n            ],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.style'\n                }\n            ],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@styleEmbedded.text/css',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [\n                /(<\\/)(style\\s*)(>)/,\n                ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]\n            ]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.styleAfterType'\n                }\n            ],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@styleEmbedded.text/css',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals'\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@styleWithCustomType.$1'\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@styleWithCustomType.$1'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@styleEmbedded.text/css',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter.html',\n                    next: '@styleEmbedded.$S2',\n                    nextEmbedded: '$S2'\n                }\n            ],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2',\n                    nextEmbedded: '@pop'\n                }\n            ],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        handlebarsInSimpleState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3' }],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsInEmbeddedState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [\n                /\\}\\}\\}?/,\n                {\n                    token: 'delimiter.handlebars',\n                    switchTo: '@$S2.$S3',\n                    nextEmbedded: '$S3'\n                }\n            ],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsRoot: [\n            [/\"[^\"]*\"/, 'string.handlebars'],\n            [/[#/][^\\s}]+/, 'keyword.helper.handlebars'],\n            [/else\\b/, 'keyword.helper.handlebars'],\n            [/[\\s]+/],\n            [/[^}]/, 'variable.parameter.handlebars']\n        ]\n    }\n};\n"]}