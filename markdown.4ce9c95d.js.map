{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","noncontrol","escapes","jsescapes","empty","tokenizer","root","token","next","nextEmbedded","include","table_header","table_body","table_common","switchTo","cases","codeblock","codeblockgh","linecontent","html","comment","tag","$S3","embeddedStyle","embeddedScript"],"mappings":"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","file":"markdown.4ce9c95d.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*<!--\\\\s*#?region\\\\b.*-->'),\n            end: new RegExp('^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area',\n        'base',\n        'basefont',\n        'br',\n        'col',\n        'frame',\n        'hr',\n        'img',\n        'input',\n        'isindex',\n        'link',\n        'meta',\n        'param'\n    ],\n    tokenizer: {\n        root: [\n            // markdown tables\n            [/^\\s*\\|/, '@rematch', '@table_header'],\n            // headers (with #)\n            [\n                /^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/,\n                ['white', 'keyword', 'keyword', 'keyword']\n            ],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, 'keyword'],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, 'meta.separator'],\n            // quote\n            [/^\\s*>+/, 'comment'],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, 'keyword'],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, 'string'],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: 'string', next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [\n                /^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/,\n                { token: 'string', next: '@codeblockgh', nextEmbedded: '$1' }\n            ],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: 'string', next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' }\n        ],\n        table_header: [\n            { include: '@table_common' },\n            [/[^\\|]+/, 'keyword.table.header'] // table header\n        ],\n        table_body: [{ include: '@table_common' }, { include: '@linecontent' }],\n        table_common: [\n            [/\\s*[\\-:]+\\s*/, { token: 'keyword', switchTo: 'table_body' }],\n            [/^\\s*\\|/, 'keyword.table.left'],\n            [/^\\s*[^\\|]/, '@rematch', '@pop'],\n            [/^\\s*$/, '@rematch', '@pop'],\n            [\n                /\\|/,\n                {\n                    cases: {\n                        '@eos': 'keyword.table.right',\n                        '@default': 'keyword.table.middle' // inner |\n                    }\n                }\n            ]\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: 'string', next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: 'string', next: '@pop' }],\n            [/.*$/, 'variable.source']\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: 'variable.source', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, 'variable.source']\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{+[^}]+\\}+/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' }\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, 'tag'],\n            [\n                /<(\\w+)/,\n                {\n                    cases: {\n                        '@empty': { token: 'tag', next: '@tag.$1' },\n                        '@default': { token: 'tag', next: '@tag.$1' }\n                    }\n                }\n            ],\n            [/<\\/(\\w+)\\s*>/, { token: 'tag' }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [\n                /(type)(\\s*=\\s*)(\")([^\"]+)(\")/,\n                [\n                    'attribute.name.html',\n                    'delimiter.html',\n                    'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html'\n                ]\n            ],\n            [\n                /(type)(\\s*=\\s*)(')([^']+)(')/,\n                [\n                    'attribute.name.html',\n                    'delimiter.html',\n                    'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html'\n                ]\n            ],\n            [\n                /(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/,\n                ['attribute.name.html', 'delimiter.html', 'string.html']\n            ],\n            [/\\w+/, 'attribute.name.html'],\n            [/\\/>/, 'tag', '@pop'],\n            [\n                />/,\n                {\n                    cases: {\n                        '$S2==style': {\n                            token: 'tag',\n                            switchTo: 'embeddedStyle',\n                            nextEmbedded: 'text/css'\n                        },\n                        '$S2==script': {\n                            cases: {\n                                $S3: {\n                                    token: 'tag',\n                                    switchTo: 'embeddedScript',\n                                    nextEmbedded: '$S3'\n                                },\n                                '@default': {\n                                    token: 'tag',\n                                    switchTo: 'embeddedScript',\n                                    nextEmbedded: 'text/javascript'\n                                }\n                            }\n                        },\n                        '@default': { token: 'tag', next: '@pop' }\n                    }\n                }\n            ]\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ]\n    }\n};\n"]}