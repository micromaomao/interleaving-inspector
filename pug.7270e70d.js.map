{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value"],"mappings":"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","file":"pug.7270e70d.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] }\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pug',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'append',\n        'block',\n        'case',\n        'default',\n        'doctype',\n        'each',\n        'else',\n        'extends',\n        'for',\n        'if',\n        'in',\n        'include',\n        'mixin',\n        'typeof',\n        'unless',\n        'var',\n        'when'\n    ],\n    tags: [\n        'a',\n        'abbr',\n        'acronym',\n        'address',\n        'area',\n        'article',\n        'aside',\n        'audio',\n        'b',\n        'base',\n        'basefont',\n        'bdi',\n        'bdo',\n        'blockquote',\n        'body',\n        'br',\n        'button',\n        'canvas',\n        'caption',\n        'center',\n        'cite',\n        'code',\n        'col',\n        'colgroup',\n        'command',\n        'datalist',\n        'dd',\n        'del',\n        'details',\n        'dfn',\n        'div',\n        'dl',\n        'dt',\n        'em',\n        'embed',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'font',\n        'footer',\n        'form',\n        'frame',\n        'frameset',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'head',\n        'header',\n        'hgroup',\n        'hr',\n        'html',\n        'i',\n        'iframe',\n        'img',\n        'input',\n        'ins',\n        'keygen',\n        'kbd',\n        'label',\n        'li',\n        'link',\n        'map',\n        'mark',\n        'menu',\n        'meta',\n        'meter',\n        'nav',\n        'noframes',\n        'noscript',\n        'object',\n        'ol',\n        'optgroup',\n        'option',\n        'output',\n        'p',\n        'param',\n        'pre',\n        'progress',\n        'q',\n        'rp',\n        'rt',\n        'ruby',\n        's',\n        'samp',\n        'script',\n        'section',\n        'select',\n        'small',\n        'source',\n        'span',\n        'strike',\n        'strong',\n        'style',\n        'sub',\n        'summary',\n        'sup',\n        'table',\n        'tbody',\n        'td',\n        'textarea',\n        'tfoot',\n        'th',\n        'thead',\n        'time',\n        'title',\n        'tr',\n        'tracks',\n        'tt',\n        'u',\n        'ul',\n        'video',\n        'wbr'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [\n                /^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '$2@tags': {\n                            cases: {\n                                '@eos': ['', 'tag'],\n                                '@default': ['', { token: 'tag', next: '@tag.$1' }]\n                            }\n                        },\n                        '$2@keywords': ['', { token: 'keyword.$2' }],\n                        '@default': ['', '']\n                    }\n                }\n            ],\n            // id\n            [\n                /^(\\s*)(#[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '@eos': ['', 'tag.id'],\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\n                    }\n                }\n            ],\n            // class\n            [\n                /^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '@eos': ['', 'tag.class'],\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\n                    }\n                }\n            ],\n            // plain text with pipe\n            [/^(\\s*)(\\|.*)$/, ''],\n            { include: '@whitespace' },\n            // keywords\n            [\n                /[a-zA-Z_$][\\w$]*/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }\n            ],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', \"@string.'\"]\n        ],\n        tag: [\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\n            [/\\s+/, { token: '', next: '@simpleText' }],\n            // id\n            [\n                /#[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        '@eos': { token: 'tag.id', next: '@pop' },\n                        '@default': 'tag.id'\n                    }\n                }\n            ],\n            // class\n            [\n                /\\.[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        '@eos': { token: 'tag.class', next: '@pop' },\n                        '@default': 'tag.class'\n                    }\n                }\n            ],\n            // attributes\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }]\n        ],\n        simpleText: [\n            [/[^#]+$/, { token: '', next: '@popall' }],\n            [/[^#]+/, { token: '' }],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                {\n                    cases: {\n                        '@eos': [\n                            'interpolation.delimiter',\n                            'interpolation',\n                            {\n                                token: 'interpolation.delimiter',\n                                next: '@popall'\n                            }\n                        ],\n                        '@default': [\n                            'interpolation.delimiter',\n                            'interpolation',\n                            'interpolation.delimiter'\n                        ]\n                    }\n                }\n            ],\n            [/#$/, { token: '', next: '@popall' }],\n            [/#/, '']\n        ],\n        attributeList: [\n            [/\\s+/, ''],\n            [\n                /(\\w+)(\\s*=\\s*)(\"|')/,\n                ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]\n            ],\n            [/\\w+/, 'attribute.name'],\n            [\n                /,/,\n                {\n                    cases: {\n                        '@eos': {\n                            token: 'attribute.delimiter',\n                            next: '@popall'\n                        },\n                        '@default': 'attribute.delimiter'\n                    }\n                }\n            ],\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        blockText: [\n            [\n                /^\\s+.*$/,\n                {\n                    cases: {\n                        '($S2\\\\s+.*$)': { token: '$S3' },\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }\n            ],\n            [/./, { token: '@rematch', next: '@popall' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        string: [\n            [\n                /[^\\\\\"'#]+/,\n                {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /@escapes/,\n                {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@eos': {\n                            token: 'string.escape.invalid',\n                            next: '@popall'\n                        },\n                        '@default': 'string.escape.invalid'\n                    }\n                }\n            ],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\n            ],\n            [/#/, 'string'],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': { token: 'string' }\n                    }\n                }\n            ]\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [\n                /[^\\\\\"']+/,\n                {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\n                        '@default': { token: 'attribute.value' }\n                    }\n                }\n            ]\n        ]\n    }\n};\n"]}