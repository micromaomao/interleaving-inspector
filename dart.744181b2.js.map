{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/dart/dart.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","end","language","defaultToken","tokenPostfix","keywords","typeKeywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","tokenizer","root","include","common","cases","token","bracket","next","whitespace","comment","jsdoc","regexp","regexrange","string_double","string_single"],"mappings":"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","file":"dart.744181b2.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\n        { open: '/**', close: ' */', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: \"'\", close: \"'\" },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '`', close: '`' }\n    ],\n    folding: {\n        markers: {\n            start: /^\\s*\\s*#?region\\b/,\n            end: /^\\s*\\s*#?endregion\\b/\n        }\n    }\n};\nexport var language = {\n    defaultToken: 'invalid',\n    tokenPostfix: '.dart',\n    keywords: [\n        'abstract',\n        'dynamic',\n        'implements',\n        'show',\n        'as',\n        'else',\n        'import',\n        'static',\n        'assert',\n        'enum',\n        'in',\n        'super',\n        'async',\n        'export',\n        'interface',\n        'switch',\n        'await',\n        'extends',\n        'is',\n        'sync',\n        'break',\n        'external',\n        'library',\n        'this',\n        'case',\n        'factory',\n        'mixin',\n        'throw',\n        'catch',\n        'false',\n        'new',\n        'true',\n        'class',\n        'final',\n        'null',\n        'try',\n        'const',\n        'finally',\n        'on',\n        'typedef',\n        'continue',\n        'for',\n        'operator',\n        'var',\n        'covariant',\n        'Function',\n        'part',\n        'void',\n        'default',\n        'get',\n        'rethrow',\n        'while',\n        'deferred',\n        'hide',\n        'return',\n        'with',\n        'do',\n        'if',\n        'set',\n        'yield'\n    ],\n    typeKeywords: ['int', 'double', 'String', 'bool'],\n    operators: [\n        '+',\n        '-',\n        '*',\n        '/',\n        '~/',\n        '%',\n        '++',\n        '--',\n        '==',\n        '!=',\n        '>',\n        '<',\n        '>=',\n        '<=',\n        '=',\n        '-=',\n        '/=',\n        '%=',\n        '>>=',\n        '^=',\n        '+=',\n        '*=',\n        '~/=',\n        '<<=',\n        '&=',\n        '!=',\n        '||',\n        '&&',\n        '&',\n        '|',\n        '^',\n        '~',\n        '<<',\n        '>>',\n        '!',\n        '>>>',\n        '??',\n        '?',\n        ':',\n        '|='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [[/[{}]/, 'delimiter.bracket'], { include: 'common' }],\n        common: [\n            // identifiers and keywords\n            [\n                /[a-z_$][\\w$]*/,\n                {\n                    cases: {\n                        '@typeKeywords': 'type.identifier',\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            [/(?<![a-zA-Z0-9_$])([_$]*[A-Z][a-zA-Z0-9_$]*)/, 'type.identifier'],\n            // [/[A-Z][\\w\\$]*/, 'identifier'],\n            // whitespace\n            { include: '@whitespace' },\n            // regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\n            [\n                /\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/,\n                { token: 'regexp', bracket: '@open', next: '@regexp' }\n            ],\n            // @ annotations.\n            [/@[a-zA-Z]+/, 'annotation'],\n            // variable\n            // delimiters and operators\n            [/[()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/!(?=([^=]|$))/, 'delimiter'],\n            [\n                /@symbols/,\n                {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }\n            ],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\n            [/0[xX](@hexdigits)n?/, 'number.hex'],\n            [/0[oO]?(@octaldigits)n?/, 'number.octal'],\n            [/0[bB](@binarydigits)n?/, 'number.binary'],\n            [/(@digits)n?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string_double'],\n            [/'/, 'string', '@string_single']\n            //   [/[a-zA-Z]+/, \"variable\"]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@jsdoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/\\/.*$/, 'comment.doc'],\n            [/\\/\\/.*$/, 'comment']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        jsdoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        // We match regular expression quite precisely\n        regexp: [\n            [\n                /(\\{)(\\d+(?:,\\d*)?)(\\})/,\n                ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']\n            ],\n            [\n                /(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/,\n                ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]\n            ],\n            [/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\n            [/[()]/, 'regexp.escape.control'],\n            [/@regexpctl/, 'regexp.escape.control'],\n            [/[^\\\\\\/]/, 'regexp'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/\\\\\\./, 'regexp.invalid'],\n            [\n                /(\\/)([gimsuy]*)/,\n                [{ token: 'regexp', bracket: '@close', next: '@pop' }, 'keyword.other']\n            ]\n        ],\n        regexrange: [\n            [/-/, 'regexp.escape.control'],\n            [/\\^/, 'regexp.invalid'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/[^\\]]/, 'regexp'],\n            [\n                /\\]/,\n                {\n                    token: 'regexp.escape.control',\n                    next: '@pop',\n                    bracket: '@close'\n                }\n            ]\n        ],\n        string_double: [\n            [/[^\\\\\"\\$]+/, 'string'],\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop'],\n            [/\\$\\w+/, 'identifier']\n        ],\n        string_single: [\n            [/[^\\\\'\\$]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, 'string', '@pop'],\n            [/\\$\\w+/, 'identifier']\n        ]\n    }\n};\n"]}