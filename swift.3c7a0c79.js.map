{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","whitespace","endDblDocString","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod","$2"],"mappings":"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","file":"swift.3c7a0c79.js","sourceRoot":"..","sourcesContent":["/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.swift',\n    // TODO(owensd): Support the full range of unicode valid identifiers.\n    identifier: /[a-zA-Z_][\\w$]*/,\n    // TODO(owensd): Support the @availability macro properly.\n    attributes: [\n        '@autoclosure',\n        '@noescape',\n        '@noreturn',\n        '@NSApplicationMain',\n        '@NSCopying',\n        '@NSManaged',\n        '@objc',\n        '@UIApplicationMain',\n        '@noreturn',\n        '@availability',\n        '@IBAction',\n        '@IBDesignable',\n        '@IBInspectable',\n        '@IBOutlet'\n    ],\n    accessmodifiers: ['public', 'private', 'internal'],\n    keywords: [\n        '__COLUMN__',\n        '__FILE__',\n        '__FUNCTION__',\n        '__LINE__',\n        'as',\n        'as!',\n        'as?',\n        'associativity',\n        'break',\n        'case',\n        'catch',\n        'class',\n        'continue',\n        'convenience',\n        'default',\n        'deinit',\n        'didSet',\n        'do',\n        'dynamic',\n        'dynamicType',\n        'else',\n        'enum',\n        'extension',\n        'fallthrough',\n        'final',\n        'for',\n        'func',\n        'get',\n        'guard',\n        'if',\n        'import',\n        'in',\n        'infix',\n        'init',\n        'inout',\n        'internal',\n        'is',\n        'lazy',\n        'left',\n        'let',\n        'mutating',\n        'nil',\n        'none',\n        'nonmutating',\n        'operator',\n        'optional',\n        'override',\n        'postfix',\n        'precedence',\n        'prefix',\n        'private',\n        'protocol',\n        'Protocol',\n        'public',\n        'repeat',\n        'required',\n        'return',\n        'right',\n        'self',\n        'Self',\n        'set',\n        'static',\n        'struct',\n        'subscript',\n        'super',\n        'switch',\n        'throw',\n        'throws',\n        'try',\n        'try!',\n        'Type',\n        'typealias',\n        'unowned',\n        'var',\n        'weak',\n        'where',\n        'while',\n        'willSet',\n        'FALSE',\n        'TRUE'\n    ],\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n    // Moved . to operatorstart so it can be a delimiter\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            { include: '@attribute' },\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@invokedmethod' },\n            { include: '@symbol' }\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/\"\"\"/, 'string.quote', '@endDblDocString']\n        ],\n        endDblDocString: [\n            [/[^\"]+/, 'string'],\n            [/\\\\\"/, 'string'],\n            [/\"\"\"/, 'string.quote', '@popall'],\n            [/\"/, 'string']\n        ],\n        symbol: [\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/[.]/, 'delimiter'],\n            [/@operators/, 'operator'],\n            [/@symbols/, 'operator']\n        ],\n        comment: [\n            [/\\/\\/\\/.*$/, 'comment.doc'],\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@commentbody']\n        ],\n        commentdocbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\n            [/./, 'comment.doc']\n        ],\n        commentbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/./, 'comment']\n        ],\n        attribute: [\n            [\n                /\\@@identifier/,\n                {\n                    cases: {\n                        '@attributes': 'keyword.control',\n                        '@default': ''\n                    }\n                }\n            ]\n        ],\n        literal: [\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\n            [/0[b]([01]_?)+/, 'number.binary'],\n            [/0[o]([0-7]_?)+/, 'number.octal'],\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\n            [/(\\d_?)+/, 'number']\n        ],\n        stringlit: [\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/@escapes/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }],\n            [/./, 'string']\n        ],\n        interpolatedexpression: [\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/\\)/, { token: 'operator', next: '@pop' }],\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@symbol' }\n        ],\n        keyword: [\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\n            [\n                /@identifier/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '[A-Z][a-zA-Z0-9$]*': 'type.identifier',\n                        '@default': 'identifier'\n                    }\n                }\n            ]\n        ],\n        escapedkeyword: [\n            [/`/, { token: 'operator', next: '@pop' }],\n            [/./, 'identifier']\n        ],\n        //\t\tsymbol: [\n        //\t\t\t[ /@symbols/, 'operator' ],\n        //\t\t\t[ /@operators/, 'operator' ]\n        //\t\t],\n        invokedmethod: [\n            [\n                /([.])(@identifier)/,\n                {\n                    cases: {\n                        $2: ['delimeter', 'type.identifier'],\n                        '@default': ''\n                    }\n                }\n            ]\n        ]\n    }\n};\n"]}