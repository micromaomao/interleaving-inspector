{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"mappings":"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","file":"powershell.6725ddf1.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    // the default separators except `$-`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '#',\n        blockComment: ['<#', '#>']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#region\\\\b'),\n            end: new RegExp('^\\\\s*#endregion\\\\b')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.ps1',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'begin',\n        'break',\n        'catch',\n        'class',\n        'continue',\n        'data',\n        'define',\n        'do',\n        'dynamicparam',\n        'else',\n        'elseif',\n        'end',\n        'exit',\n        'filter',\n        'finally',\n        'for',\n        'foreach',\n        'from',\n        'function',\n        'if',\n        'in',\n        'param',\n        'process',\n        'return',\n        'switch',\n        'throw',\n        'trap',\n        'try',\n        'until',\n        'using',\n        'var',\n        'while',\n        'workflow',\n        'parallel',\n        'sequence',\n        'inlinescript',\n        'configuration'\n    ],\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // commands and keywords\n            [\n                /[a-zA-Z_][\\w-]*/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }\n            ],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // labels\n            [/^:\\w*/, 'metatag'],\n            // variables\n            [\n                /\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/,\n                'variable'\n            ],\n            // Comments\n            [/<#/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // delimiters\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\\@\"/, 'string', '@herestring.\"'],\n            [/\\@'/, 'string', \"@herestring.'\"],\n            [\n                /\"/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }\n            ],\n            [\n                /'/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: \"@string.'\" }\n                    }\n                }\n            ]\n        ],\n        string: [\n            [\n                /[^\"'\\$`]+/,\n                {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /@escapes/,\n                {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }\n            ],\n            [\n                /`./,\n                {\n                    cases: {\n                        '@eos': {\n                            token: 'string.escape.invalid',\n                            next: '@popall'\n                        },\n                        '@default': 'string.escape.invalid'\n                    }\n                }\n            ],\n            [\n                /\\$[\\w]+$/,\n                {\n                    cases: {\n                        '$S2==\"': { token: 'variable', next: '@popall' },\n                        '@default': { token: 'string', next: '@popall' }\n                    }\n                }\n            ],\n            [\n                /\\$[\\w]+/,\n                {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': {\n                            cases: {\n                                '@eos': { token: 'string', next: '@popall' },\n                                '@default': 'string'\n                            }\n                        }\n                    }\n                }\n            ]\n        ],\n        herestring: [\n            [\n                /^\\s*([\"'])@/,\n                {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [/[^\\$`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/`./, 'string.escape.invalid'],\n            [\n                /\\$[\\w]+/,\n                {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }\n            ]\n        ],\n        comment: [\n            [/[^#\\.]+/, 'comment'],\n            [/#>/, 'comment', '@pop'],\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\n            [/[\\.#]/, 'comment']\n        ]\n    }\n};\n"]}